@using System.Net.Mail;
@using System.Net.Security;
@using System.Web.Helpers;
@using Microsoft.Web.Helpers;
@{
    var resultMessage = "";

    Validation.Add("name", 
        Validator.Required("Name is required.") 
        );
    Validation.Add("email", 
        Validator.Required("Email is required."),
        Validator.Regex(@"^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$", "Valid email is required.")
        );
    Validation.Add("message", 
        Validator.Required("Question is required.") 
        );
    if (IsPost)
    {
        if (!ReCaptcha.Validate(ReCaptcha.PrivateKey)) {
            ModelState.AddError("ReCaptcha","Code entered doesn't match the image below.");
        }

        if (ModelState.IsValid) {
            if (Validation.IsValid())
            {
                try {
                    // Send email
                    WebMail.Send(
                        to: "info@ohiomensoxroast.org",
                        subject: "Ox Roast Question From " + Request["name"],
                        body: Request["message"],
                        from: Request["email"]
                    );

                    resultMessage = "<p class='success-msg'>Your question has been successfully sent!</p>";
                } catch {
                    ModelState.AddFormError("Sorry, we are unable to send any emails at this time. If you need immedidate assitance please contact us at info@ohiomensoxroast.org"); 
                }
             } else {
                ModelState.AddFormError("You must resolve any errors before submitting.");
             }
         }
     }
}

<form action="" method="post">
    <h2>Contact Us</h2>
    @Html.Raw(resultMessage)
    @Html.ValidationSummary(true)
    <fieldset>
        <label for="name">Name</label>
        <input id="name" name="name" type="text" class="@Validation.ClassFor("name")" required="required" placeholder="Name"/>
        @Html.ValidationMessage("name")

        <label for="email">Email</label>
        <input id="email" name="email" type="text" class="@Validation.ClassFor("email")" required="required" placeholder="Email"/>
        @Html.ValidationMessage("email")


        <label for="message">Question?</label>
        <textarea id="message" name="message" required="required" placeholder="Question?" spellcheck="spellcheck" class="@Validation.ClassFor("message")"></textarea>
        @Html.ValidationMessage("message")

        <div class="captcha-wrapper">
            @ReCaptcha.GetHtml(ReCaptcha.PublicKey, theme: "white")
            @Html.ValidationMessage("ReCaptcha")
        </div>

        <input type="submit" value="Send" class="submit" />
    </fieldset> 
</form>
