@using System;
@using System.IO;
@using System.Text;
@using System.Text.RegularExpressions;
@using System.Net;
@using System.Web;
@using System.Collections.Specialized;
@using System.Dynamic;
@using SD = Simple.Data;
@using System.Web.Mvc;
@using System.Web.Helpers;
@{
    List<dynamic> registrationInfo = new List<dynamic>();
    var shipToStreet = "";
    var billingAddress = "";
    bool gotExpressCheckoutDetails = false;
    bool didDoExpressCheckoutPayment = false;

    string token = Request["token"];
    string payerId = Request["PayerId"];

    //build action
    var strGetExpressCheckoutDetails = new StringBuilder();
    strGetExpressCheckoutDetails.Append("METHOD=");
    strGetExpressCheckoutDetails.Append(App.GetExpressCheckoutDetailsMethod);
    strGetExpressCheckoutDetails.Append("&VERSION=");
    strGetExpressCheckoutDetails.Append(App.ExpressCheckoutVersion);
    strGetExpressCheckoutDetails.Append("&USER=");
    strGetExpressCheckoutDetails.Append(App.PayPalUser);
    strGetExpressCheckoutDetails.Append("&PWD=");
    strGetExpressCheckoutDetails.Append(App.PayPalPassword);
    strGetExpressCheckoutDetails.Append("&SIGNATURE=");
    strGetExpressCheckoutDetails.Append(App.PayPalSignature);
    strGetExpressCheckoutDetails.Append("&TOKEN=");
    strGetExpressCheckoutDetails.Append(token);
    
    //Do Post
    DoPostPayPalData doPostToForGetDetails = new DoPostPayPalData(strGetExpressCheckoutDetails.ToString(), App.ProdPayInfoUrl);
    string getDetatailsResponse = doPostToForGetDetails.Post();

    NameValueCollection getDetatailsResponseObj = HttpUtility.ParseQueryString(getDetatailsResponse); //Parse server response

    if (getDetatailsResponseObj.Get("ACK") == "Success") {
        token = getDetatailsResponseObj.Get("TOKEN");

        Regex regexObj = new Regex(@"[^\d]");
        var confirmID = regexObj.Replace(token, "");

        gotExpressCheckoutDetails = true;

        shipToStreet = getDetatailsResponseObj.Get("SHIPTOSTREET");
        billingAddress = getDetatailsResponseObj.Get("SHIPTOSTREET") + " " + getDetatailsResponseObj.Get("SHIPTOCITY") + ", " + getDetatailsResponseObj.Get("SHIPTOSTATE") + " " + getDetatailsResponseObj.Get("SHIPTOZIP");
       
        var db = SD.Database.OpenFile(Server.MapPath("~/App_Data/COGMOR.sdf"));

        registrationInfo = db.RegistrationDetails.All()
              .Join(db.Registration)
              .On(db.RegistrationDetails.ID == db.Registration.Id)
              .Select(
                db.Registration.Id, 
                db.Registration.Attendee, 
                db.Registration.Address,
                db.Registration.City,
                db.Registration.State,
                db.Registration.Zip,
                db.Registration.Phone_Num,
                db.Registration.Email,
                db.Registration.Church,
                db.Registration.Guests,
                db.RegistrationDetails.Num_Attending_Two_Days,
                db.RegistrationDetails.Num_Attending_One_Day,
                db.RegistrationDetails.Num_12andYounger_Attending,
                db.RegistrationDetails.Num_Golfing,
                db.RegistrationDetails.Num_Paintballing,
                db.RegistrationDetails.Num_Fishing,
                db.RegistrationDetails.Total_Paided)
              .Where(db.Registration.Id == confirmID)
              .ToList();

        if (IsPost) {
            App.ExpressCheckoutToken = getDetatailsResponseObj.Get("TOKEN");
  
            token = App.ExpressCheckoutToken;
            
            //build action
            var strDoExpressCheckoutPayment = new StringBuilder();
            strDoExpressCheckoutPayment.Append("METHOD=");
            strDoExpressCheckoutPayment.Append(App.DoExpressCheckoutPaymentMethod);
            strDoExpressCheckoutPayment.Append("&VERSION=");
            strDoExpressCheckoutPayment.Append(App.ExpressCheckoutVersion);
            strDoExpressCheckoutPayment.Append("&USER=");
            strDoExpressCheckoutPayment.Append(App.PayPalUser);
            strDoExpressCheckoutPayment.Append("&PWD=");
            strDoExpressCheckoutPayment.Append(App.PayPalPassword);
            strDoExpressCheckoutPayment.Append("&SIGNATURE=");
            strDoExpressCheckoutPayment.Append(App.PayPalSignature);
            strDoExpressCheckoutPayment.Append("&TOKEN=");
            strDoExpressCheckoutPayment.Append(token);
            strDoExpressCheckoutPayment.Append("&PAYERID=");
            strDoExpressCheckoutPayment.Append(payerId);
            strDoExpressCheckoutPayment.Append("&PAYMENTREQUEST_0_PAYMENTACTION=");
            strDoExpressCheckoutPayment.Append(App.ExpressCheckoutPaymentAction);
            strDoExpressCheckoutPayment.Append("&PAYMENTREQUEST_0_CURRENCYCODE=");
            strDoExpressCheckoutPayment.Append(App.ExpressCheckoutCurrencyCode);
            strDoExpressCheckoutPayment.Append("&PAYMENTREQUEST_0_AMT=");
            strDoExpressCheckoutPayment.Append(getDetatailsResponseObj.Get("PAYMENTREQUEST_0_AMT"));
            strDoExpressCheckoutPayment.Append("&PAYMENTREQUEST_0_ITEMAMT=");
            strDoExpressCheckoutPayment.Append(getDetatailsResponseObj.Get("PAYMENTREQUEST_0_ITEMAMT"));

            //Do Post
            DoPostPayPalData doPostToComfirmPayment = new DoPostPayPalData(strDoExpressCheckoutPayment.ToString(), App.ProdPayInfoUrl);
            string confirmPaymentResponse = doPostToComfirmPayment.Post();
            
            NameValueCollection confirmPaymentResponseObj = HttpUtility.ParseQueryString(confirmPaymentResponse); //Parse server response

            if (confirmPaymentResponseObj.Get("ACK").Contains("Success")) {
               didDoExpressCheckoutPayment = true; 
            }

            if (confirmPaymentResponseObj.Get("ACK") == "Success") {
                
                //Updated  database with succss order info from paypal
                dynamic expSuccess = new ExpandoObject();
                expSuccess.ID = confirmID;

                db.DoExpressCheckoutSuccessDetails.Insert(expSuccess);

                //Send user email and copy email to info@ohiomensoxroast.org
                try {

                    foreach (var regInfo in registrationInfo) {
                        var regInfoID = regInfo.ID;
                        var regInfoAttendee = regInfo.Attendee;
                        var regInfoAddress = regInfo.Address;
                        var regInfoCity = regInfo.City;
                        var regInfoState = regInfo.State;
                        var regInfoZip = regInfo.Zip;
                        var regInfoPhoneNum = regInfo.Phone_Num;
                        var regInfoEmail = regInfo.Email;
                        var regInfoChurch = regInfo.Church;
                        var regInfoGuests = regInfo.Guests;
                        string[,] regPInfo = new string[6, 3] { 
                            {regInfo.Num_Attending_Two_Days.ToString(), "Two Day", "$ " + Math.BigMul(regInfo.Num_Attending_Two_Days, 65).ToString()}, 
                            {regInfo.Num_Attending_One_Day.ToString(), "One Day", "$ " + Math.BigMul(regInfo.Num_Attending_One_Day, 35).ToString()},
                            {regInfo.Num_12andYounger_Attending.ToString(), "12 and under", "$ " + Math.BigMul(regInfo.Num_12andYounger_Attending, 25).ToString()}, 
                            {regInfo.Num_Golfing.ToString(), "Golfing", "$ " + Math.BigMul(regInfo.Num_Golfing, 45).ToString()}, 
                            {regInfo.Num_Paintballing.ToString(), "Paintball", "$ " + Math.BigMul(regInfo.Num_Paintballing, 5).ToString()}, 
                            {regInfo.Num_Fishing.ToString(), "Fishing", "$ " + Math.BigMul(regInfo.Num_Fishing, 25).ToString()}, 
                        };
                        var regInfoTotalPaid = regInfo.Total_Paided;
                    
                        var emailBody = new StringBuilder();

                        emailBody.Append("<html>");
                        emailBody.Append("<body style='margin: 0'>");
                        emailBody.Append("<h3>Registration/Billing Info</h3>");
                        emailBody.Append("<table>");
                        emailBody.Append("<tr><td>Confirmation #:</td><td>" + regInfoID + "</td></tr>");
                        emailBody.Append("<tr><td>Name:</td><td>" + regInfoAttendee + "</td></tr>");
                        emailBody.Append("<tr><td>Registered Address:</td><td>" + regInfoAddress + " " + regInfoCity + ", " + regInfoState + " " + regInfoZip + "</td></tr>");
                        if (regInfoAddress != shipToStreet) {
                            emailBody.Append("<tr><td>Billing Address:</td><td>" + billingAddress + "</td></tr>");
                        } else {
                            emailBody.Append("<tr><td>Billing Address:</td><td>Same as registered address</td></tr>");
                        }
                        if (regInfoPhoneNum != null) {
                            emailBody.Append("<tr><td>Phone Num:</td><td>" + String.Format("{0:###-###-####}", regInfoPhoneNum).Replace("-",".") + "</td></tr>");
                        }
                        emailBody.Append("<tr><td>Email:</td><td>" + regInfoEmail + "</td></tr>");
                        if (regInfoChurch != null && regInfoChurch != "") {
                            emailBody.Append("<tr><td>Church Attending:</td><td>" + regInfoChurch + "</td></tr>");
                        }

                        if (regInfoGuests != null){
                            emailBody.Append("<tr><td>Guest:</td><td>");
                            emailBody.Append("<table");
                        
                            string[] arrRegInfoGuests = regInfoGuests.Split(new char[] { ';' });
                            for (var i = 0; i < arrRegInfoGuests.Length; i++) {
                                var gc = i + 1;
                                emailBody.Append("<tr><td>Guest " + gc + ": " + arrRegInfoGuests[i].ToString() + "</td></tr>");
                            }

                            emailBody.Append("</table>");
                            emailBody.Append("</td></tr>");
                        }
                        emailBody.Append("</table>");
                        emailBody.Append("<h3>Event/Activity Pricing Info</h3>");
                        emailBody.Append("<table>");
                        emailBody.Append("<tr><th>Qty.</th><th>Event/Activity</th><th>Price</th></tr>");

                        for (int i = 0; i < regPInfo.GetLength(0); i++) {
                           if (int.Parse(regPInfo[i,0]) > 0){
                                emailBody.Append("<tr><td>" + regPInfo[i,0] + "</td><td>" + regPInfo[i,1] + "</td><td>" + regPInfo[i,2] + "</td></tr>");
                            }
                        }

                        emailBody.Append("<tr><td colspan='2'>Total</td><td>" + regInfoTotalPaid + "</td></tr>");
                        emailBody.Append("</table>");
                        emailBody.Append("</body>");
                        emailBody.Append("</html>");

                        // Send email
                        WebMail.Send(
                            to: regInfoEmail,
                            subject: "Registration Receipt",
                            body: emailBody.ToString(),
                            isBodyHtml: true,
                            from: "info@ohiomensoxroast.org",
                            cc: "info@ohiomensoxroast.org"
                        );
                    } 
                } catch (Exception ex) {
                   <p class="error">Sorry, we can't send you an email copy of your receipt at this time. Your order has been confirmed by through Paypal, please print this pay as your acknowledgement of payment.</p>
                }

               <p class="success">
                    Thank you for registering for the Ox Roast. We have sent a copy of the registration information to your email account.
                    When you arrive at the Ox Roast on Septermber 6th 2013 we will veify that you have registered for the Ox Roast. 
                    You will not be required to show a copy of your registration. 
                    The registration information sent to your email account or any printing of page is purly for your benefit, 
                    however it may not hurt to have a copy with you just incase.
               </p>
            } else {
                <p class="error">
                    The server could not process your request. 
                    Please contact us at info@ohiomensoxroast.org for assiatance with an issues.
                </p>
            }
            
        }
    } else {
        <p class="error">
            The server could not process your request. 
            Please contact us at info@ohiomensoxroast.org for assiatance with an issues.
        </p>
    }
}
<div class="registration-details">
    <p>Please review your order below and confirmation your payment. Note: Make sure you click confirm payment so that we may process your registration fully.</p>
    @if (gotExpressCheckoutDetails) {
        foreach (var info in registrationInfo) {
            string[,] evtPricingInfo = new string[6, 3] { 
                {info.Num_Attending_Two_Days.ToString(), "Two Day", "$ " + Math.BigMul(info.Num_Attending_Two_Days, int.Parse(App.twoDayPrice)).ToString()}, 
                {info.Num_Attending_One_Day.ToString(), "One Day", "$ " + Math.BigMul(info.Num_Attending_One_Day, 35).ToString()},
                {info.Num_12andYounger_Attending.ToString(), "12 and under", "$ " + Math.BigMul(info.Num_12andYounger_Attending, 25).ToString()}, 
                {info.Num_Golfing.ToString(), "Golfing", "$ " + Math.BigMul(info.Num_Golfing, 45).ToString()}, 
                {info.Num_Paintballing.ToString(), "Paintball", "$ " + Math.BigMul(info.Num_Paintballing, 5).ToString()}, 
                {info.Num_Fishing.ToString(), "Fishing", "$ " + Math.BigMul(info.Num_Fishing, 25).ToString()}, 
            };

            <h3>Registration/Billing Info</h3>
            <ul class="generalInfo">
                <li>
                    <h4>Confirmation #:</h4>
                    <span>@info.ID</span>
                </li>
			    <li>
				    <h4>Name:</h4>
				    <span>@info.Attendee</span> <!-- Ex. Smith, Bob -->
			    </li>
			    <li>
				    <h4>Registered Address:</h4>
				    <span>@info.Address @info.City, @info.State @info.Zip</span><!-- Ex. Street, State Zip -->
			    </li>
                <li>
                    <h4>Billing Address:</h4>
                    @if (info.Address != shipToStreet) {
                        <span>@billingAddress</span>
                    } else {
                        <span>Same as registered address</span>
                    }
                </li>
                @if (info.Phone_Num != null) {
                    <li>
				        <h4>Phone Num:</h4>
				        <span>@String.Format("{0:###-###-####}", info.Phone_Num).Replace("-",".")</span> <!-- Ex. 740.497.2943 -->
                    </li>
                }
                <li>
				    <h4>Email:</h4>
				    <span>@info.Email</span> <!-- Ex. 740.497.2943 -->
                </li>
                @if (info.Church != null && info.Church != "") {
			        <li>
				        <h4>Church Attending:</h4>
				        <span>@info.Church</span>
			        </li>
                }
                @{
                  string strGuests = info.Guests;
                  if (strGuests != null) {
                    string[] arrGuests = strGuests.Split(new char[] { ';' });

                      if (arrGuests.Length >= 1) {
                        <li class="guests">
                          <h4>Guest</h4>
                            <ul>
                                @for (var i = 0; i < arrGuests.Length; i++) {
                                    var guestCount = i + 1;
                                    <li>Guest @guestCount: @arrGuests[i].ToString()</li>
                                }
                            </ul>
                        </li>
                      }
                  }
                }
              
		    </ul>
            <h3>Event/Activity Pricing Info</h3>
		    <ul class="pricingInfo">
                <li class="headings">
                    <h4>Qty.</h4>
                    <h4>Event/Activity</h4>
                    <h4>Price</h4>
                </li>
                @for (int i = 0; i < evtPricingInfo.GetLength(0); i++) {
                   if (int.Parse(evtPricingInfo[i,0]) > 0){
                        <li>
                            @for (int j = 0; j < evtPricingInfo.GetLength(1); j++)
                            {
                                <span>@evtPricingInfo[i,j]</span>
                            }
                        </li>
                    }
                }
			    <li class="last">
				    <h4>Total</h4>
				    <span>&#36; @info.Total_Paided</span>
			    </li>
		    </ul>
        }
        
        if (didDoExpressCheckoutPayment == false) {
            <form action="" method="post">
                <fieldset>
                    <input type="submit" class="confirm" value="Confirm Payment"/>
                </fieldset>
            </form>
        }
    }
</div>