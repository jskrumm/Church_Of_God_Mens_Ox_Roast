@using System;
@using System.IO;
@using System.Text;
@using System.Net;
@using System.Web;
@using System.Collections.Specialized;
@{
    string token = Request["token"];
    string payerId = Request["PayerId"];
    string method = "GetExpressCheckoutDetails";

    //build action
    var strGetExpressCheckoutDetails = new StringBuilder();
    strGetExpressCheckoutDetails.Append("METHOD=");
    strGetExpressCheckoutDetails.Append(method);
    strGetExpressCheckoutDetails.Append("&VERSION=");
    strGetExpressCheckoutDetails.Append(App.ExpressCheckoutVersion);
    strGetExpressCheckoutDetails.Append("&USER=");
    strGetExpressCheckoutDetails.Append(App.PayPalUser);
    strGetExpressCheckoutDetails.Append("&PWD=");
    strGetExpressCheckoutDetails.Append(App.PayPalPassword);
    strGetExpressCheckoutDetails.Append("&SIGNATURE=");
    strGetExpressCheckoutDetails.Append(App.PayPalSignature);
    strGetExpressCheckoutDetails.Append("&TOKEN=");
    strGetExpressCheckoutDetails.Append(token);
    
    byte[] data = Encoding.UTF8.GetBytes(strGetExpressCheckoutDetails.ToString()); //Convert query string paramenters to byte array
    
    HttpWebRequest req = (HttpWebRequest)WebRequest.Create(App.SandboxPayInfoUrl);
    req.Method = "POST";
    req.ContentType = "application/x-www-form-urlencoded";
    req.ContentLength = data.Length;
        
    //Create a new request stream
    Stream newStream = req.GetRequestStream();
    newStream.Write(data, 0, data.Length);
    newStream.Close();

    WebResponse response = req.GetResponse(); // Get the original response.
    newStream = response.GetResponseStream(); // Get the stream containing all content returned by the requested server.
        
    StreamReader reader = new StreamReader(newStream); // Open the stream using a StreamReader for easy access.
    string responseFromServer = reader.ReadToEnd(); // Read the content fully up to the end.

    // Clean up the streams.
    reader.Close();
    newStream.Close();
    response.Close();

     NameValueCollection responseObj = HttpUtility.ParseQueryString(responseFromServer); //Parse server response
     if (responseObj.Get("ACK") == "Success") {
        if (IsPost) {
            App.ExpressCheckoutToken = responseObj.Get("TOKEN");
  
            token = App.ExpressCheckoutToken;
            method = "DoExpressCheckoutPayment";
            payerId = responseObj.Get("PAYERID");
            
            //build action
            var strDoExpressCheckoutPayment = new StringBuilder();
            strDoExpressCheckoutPayment.Append("METHOD=");
            strDoExpressCheckoutPayment.Append(method);
            strDoExpressCheckoutPayment.Append("&VERSION=");
            strDoExpressCheckoutPayment.Append(App.ExpressCheckoutVersion);
            strDoExpressCheckoutPayment.Append("&USER=");
            strDoExpressCheckoutPayment.Append(App.PayPalUser);
            strDoExpressCheckoutPayment.Append("&PWD=");
            strDoExpressCheckoutPayment.Append(App.PayPalPassword);
            strDoExpressCheckoutPayment.Append("&SIGNATURE=");
            strDoExpressCheckoutPayment.Append(App.PayPalSignature);
            strDoExpressCheckoutPayment.Append("&TOKEN=");
            strDoExpressCheckoutPayment.Append(token);
            strDoExpressCheckoutPayment.Append("&PAYERID=");
            strDoExpressCheckoutPayment.Append(payerId);
            strDoExpressCheckoutPayment.Append("&PAYMENTREQUEST_0_PAYMENTACTION=");
            strDoExpressCheckoutPayment.Append(App.ExpressCheckoutPaymentAction);
            strDoExpressCheckoutPayment.Append("&PAYMENTREQUEST_0_CURRENCYCODE=");
            strDoExpressCheckoutPayment.Append(App.ExpressCheckoutCurrencyCode);
            strDoExpressCheckoutPayment.Append("&PAYMENTREQUEST_0_AMT=");
            strDoExpressCheckoutPayment.Append("19.95");
            strDoExpressCheckoutPayment.Append("&PAYMENTREQUEST_0_ITEMAMT=");
            strDoExpressCheckoutPayment.Append("19.95");

            byte[] data2 = Encoding.UTF8.GetBytes(strDoExpressCheckoutPayment.ToString()); //Convert query string paramenters to byte array
    
            HttpWebRequest req2 = (HttpWebRequest)WebRequest.Create(App.SandboxPayInfoUrl);
            req2.Method = "POST";
            req2.ContentType = "application/x-www-form-urlencoded";
            req2.ContentLength = data2.Length;
        
            //Create a new request stream
            Stream newStream2 = req2.GetRequestStream();
            newStream2.Write(data2, 0, data2.Length);
            newStream2.Close();

            WebResponse response2 = req2.GetResponse(); // Get the original response.
            newStream2 = response2.GetResponseStream(); // Get the stream containing all content returned by the requested server.
        
            StreamReader reader2 = new StreamReader(newStream2); // Open the stream using a StreamReader for easy access.
            string responseFromServer2 = reader2.ReadToEnd(); // Read the content fully up to the end.

            // Clean up the streams.
            reader2.Close();
            newStream2.Close();
            response2.Close();

            @responseFromServer2
            
            NameValueCollection responseObj2 = HttpUtility.ParseQueryString(responseFromServer2); //Parse server response
     
            if (responseObj.Get("ACK") == "Success") {
               <text>
                    Than you for registering for the Ox Roast. When you arrive at the Ox Roast on Septermber 6th 2013 we will veify that you have registered for the Ox Roast. 
                    Below is a copy of your registration please print so that you have a copy for your records.You will not be required to show a copy of your registration the printing
                    of this page is purly for your benefit, however it may not hurt to have this copy with you as prof of payment incase your registration is lost.
               </text>
            } else {
                <text>The server could not process your request. If you see this message please contact us at info@ohiomensoxroast.org so that we can fix this issue quickly.</text>
            }
            
        }
    } else {
        <text>The server could not process your request. If you see this message please contact us at info@ohiomensoxroast.org so that we can fix this issue quickly.</text>
    }
}
<div class="registration-details">
    <p>Please review your order below and confirmation your payment. Note: Make sure you click confirm payment so that we may process your registration fully.</p>

    <form action="" method="post">
        <fieldset>
            <input type="submit" value="Confirm Payment"/>
        </fieldset>
    </form>
</div>

